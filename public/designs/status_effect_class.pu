@startuml status_effect_class
title 状態異常の全体構造
hide empty member

class BuffData {
  + Duration: float
  + EffectValue: float
  + Stack: int
  + MaxStack: int
}

class Buff {
  + data: BuffData
  + sender: Transform
  + target: StatusEffectReceiver
  + OnRemoved: UnityAction<Buff>
  {abstract} + Apply()
  {abstract} + Remove()
}

class PoisonBuff {
  # currentStack: int
  # isEffecting: bool
  # targetHealth: vHealthController
  + AddStack(value: int, limit: int)
  # PoisonCoroutine(): IEnumerator
}

class BuffFactory {
  {abstract} + GetBuff(sender: Transform, target: StatusEffectReceiver, data: BuffData)
}

class PoisonBuffFactory {
}

class StatusEffectReceiver {
  + allowedBuff: List<ReceiveEffectConfig>
  + ActiveBuff: List<Buff>
  + ApplyEffect(sender: Transform, effectName: string, data: BuffData)
}

class ReceiveEffectConfig {
  + effectName: string
  + regist: float
  + factory: BuffFactory
}

class StatusEffectGiver {
  - giveNodes: List<BuffNode>
  + Send(target: Transform)
}

class BuffNode {
  + Name: string
  + Data: BuffData
}

BuffData .right.> BuffFactory : データ投入
BuffFactory .right.> Buff : 生成
Buff <|-- PoisonBuff
BuffFactory <|-- PoisonBuffFactory
BuffData <.down. BuffNode : 参照
BuffFactory <.. BuffNode : 参照
StatusEffectGiver .up.> BuffNode : 参照
StatusEffectGiver ..> StatusEffectReceiver : 状態異常ノードを与える

@enduml